"use strict";(self.webpackChunksudeeparyan_knowledgebase=self.webpackChunksudeeparyan_knowledgebase||[]).push([[929],{55585:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var t=n(74848),s=n(28453);n(96540);const o={},i=void 0,a={id:"Azure360/Azure Best Practices/Application Services/Container Registry",title:"Container Registry",description:"1. Azure Container Registry (ACR) is a managed, private container registry",source:"@site/docs/Azure360/Azure Best Practices/Application Services/Container Registry.md",sourceDirName:"Azure360/Azure Best Practices/Application Services",slug:"/Azure360/Azure Best Practices/Application Services/Container Registry",permalink:"/docs/Azure360/Azure Best Practices/Application Services/Container Registry",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"azureSidebar",previous:{title:"Storage Account",permalink:"/docs/Azure360/Azure Best Practices/Application Services/Storage Account"},next:{title:"Virtual Machine",permalink:"/docs/Azure360/Azure Best Practices/Application Services/Virtual Machine"}},c={},d=[{value:"When to Use Azure Container Registry",id:"when-to-use-azure-container-registry",level:3},{value:"Commands",id:"commands",level:3},{value:"Docker Commands",id:"docker-commands",level:4},{value:"Powershell commands",id:"powershell-commands",level:4},{value:"Scripts",id:"scripts",level:3},{value:"Install Docker Setup(Shell Script)",id:"install-docker-setupshell-script",level:4},{value:"Setup Azure Agent",id:"setup-azure-agent",level:4},{value:"Learn more about Azure Container Registry",id:"learn-more-about-azure-container-registry",level:3}];function l(e){const r={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Azure Container Registry (ACR)"})," is a managed, private container registry\r\nservice by Microsoft Azure that allows developers to store and manage\r\ncontainer images and other artifacts used for container-based applications."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["ACR integrates with ",(0,t.jsx)(r.code,{children:"Azure Kubernetes Service (AKS)"}),",\r\n",(0,t.jsx)(r.code,{children:"Azure Red Hat OpenShift"})," and other orchestration platforms, providing\r\nseamless image management across the deployment lifecycle."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"when-to-use-azure-container-registry",children:"When to Use Azure Container Registry"}),"\n",(0,t.jsxs)("table",{class:"table-size-for-cloud-services",children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Factors"}),(0,t.jsx)("th",{children:"Reason"})]})}),(0,t.jsxs)("tbody",{children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("span",{class:"custom-header",children:"Storing and Managing Container Images"})}),(0,t.jsxs)("td",{children:["Store container images for deployment to ",(0,t.jsx)(r.a,{href:"https://azure.microsoft.com/en-us/products/kubernetes-service",children:"Azure Kubernetes Service (AKS)"})," or other platforms."]})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("span",{class:"custom-header",children:"CI/CD Pipelines"})}),(0,t.jsx)("td",{children:"Integrate with Continuous Integration/Continuous Deployment (CI/CD) pipelines to streamline the container build, store and deployment process."})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("span",{class:"custom-header",children:"Multi-Region Deployments"})}),(0,t.jsx)("td",{children:"Ideal for teams that require global availability of container images and faster deployment in multiple Azure regions."})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)("span",{class:"custom-header",children:"Hybrid Environments"})}),(0,t.jsxs)("td",{children:["Use ACR for ",(0,t.jsx)(r.a,{href:"https://learn.microsoft.com/en-us/azure/container-registry/container-registry-storage",children:"container image storage"})," in hybrid cloud scenarios where both on-premises and cloud solutions are involved."]})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"commands",children:"Commands"}),"\n",(0,t.jsx)(r.h4,{id:"docker-commands",children:"Docker Commands"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"\r\n# Description: Docker commands\r\n\r\n`docker --version`\r\n\r\n# List all containers\r\n\r\n`docker ps`\r\n\r\n# List docker images\r\n\r\n`docker images`\r\n\r\n# Remove docker image\r\n\r\n`docker rmi -f {image_id}`\r\n\r\n# build docker image\r\n\r\n`docker build -t {image-name} -f {docker-file-path} .`\r\n\r\n# Run a image as container\r\n\r\n`docker run --name {container-name} -d -p {external-port}:{docker-port} {image-name}`\r\n\n"})}),"\n",(0,t.jsx)(r.h4,{id:"powershell-commands",children:"Powershell commands"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"# Description: Powershell commands\r\n\r\n# Install Azure CLI\r\n`winget install -e --id Microsoft.AzureCLI`\r\n\r\n# Loin in to the Azure\r\n`az login`\r\n\r\n# List the active subscription\r\n`az account show`\r\n\r\n# Login to the Azure Container Registry\r\n`az acr login --name {acr-name}`\r\n\r\n# List the images in the Azure Container Registry\r\n`az acr repository list --name {acr-name}`\r\n\r\n# Tag docker images to ACR\r\n`docker tag {image-name} {acr-name}.azurecr.io/{image-name}`\r\n\r\n# Push docker image to ACR\r\n`docker push {acr-name}.azurecr.io/{image-name}`\r\n\n"})}),"\n",(0,t.jsx)(r.h3,{id:"scripts",children:"Scripts"}),"\n",(0,t.jsx)(r.h4,{id:"install-docker-setupshell-script",children:"Install Docker Setup(Shell Script)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'# This script installs Docker on a Linux machine using the official Docker repository.\r\n# It also adds the current user to the Docker group and enables Docker to start on boot.\r\n# Reasons for adding the current user to the Docker group:\r\n# - The Docker daemon binds to a Unix socket instead of a TCP port. By default, that Unix socket is owned by the user root and other users can only access it using sudo. The Docker daemon always runs as the root user.\r\n# - If you don\'t want to use sudo when you use the docker command, create a Unix group called docker and add users to it. When the Docker daemon starts, it makes the ownership of the Unix socket read/writable by the docker group.\r\n\r\n# Install Docker\r\necho "Updating APT..."\r\nsudo apt-get update\r\n\r\necho "Installing required packages..."\r\nsudo apt-get install -y ca-certificates curl gnupg lsb-release\r\n\r\necho "Adding Docker\'s official GPG key..."\r\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\r\n\r\necho "Setting up the stable Docker repository..."\r\necho \\\r\n  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\r\n  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\r\n\r\necho "Updating APT with the new Docker repository..."\r\nsudo apt-get update\r\n\r\necho "Installing Docker CE, CLI, and containerd.io..."\r\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io\r\n\r\n# Create the docker group\r\nsudo groupadd docker\r\n\r\n# Add user to Docker group\r\nsudo usermod -aG docker $USER\r\n\r\n# Activate the changes to groups\r\nnewgrp docker\r\n\r\n# Enable Docker to start on boot\r\necho "Enabling Docker to start on boot..."\r\nsudo systemctl enable docker.service\r\nsudo systemctl enable containerd.service\n'})}),"\n",(0,t.jsx)(r.h4,{id:"setup-azure-agent",children:"Setup Azure Agent"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'# This script will download the Azure DevOps agent, extract it, configure it, and install it as a service.\r\n\r\n# Define variables\r\nAGENT_URL="https://vstsagentpackage.azureedge.net/agent/3.243.1/vsts-agent-linux-x64-3.243.1.tar.gz"\r\nAGENT_DIR="$HOME/myagent"\r\nDOWNLOAD_DIR="$HOME/Downloads"\r\nAGENT_TAR="$DOWNLOAD_DIR/vsts-agent-linux-x64-3.243.1.tar.gz"\r\n\r\n# Create necessary directories\r\nmkdir -p $AGENT_DIR\r\nmkdir -p $DOWNLOAD_DIR\r\n\r\n# Download the agent if it doesn\'t already exist\r\nif [ ! -f "$AGENT_TAR" ]; then\r\n  echo "Downloading the Azure DevOps agent..."\r\n  wget -q --show-progress -O $AGENT_TAR $AGENT_URL\r\n  echo "Download complete."\r\nelse\r\n  echo "Agent tarball already exists. Skipping download."\r\nfi\r\n\r\n# Extract the agent\r\nif [ -f "$AGENT_TAR" ]; then\r\n  echo "Extracting the agent..."\r\n  tar zxvf $AGENT_TAR -C $AGENT_DIR\r\nelse\r\n  echo "Error: Download failed or the file does not exist."\r\n  exit 1\r\nfi\r\n\r\n# Change to the agent directory\r\ncd $AGENT_DIR\r\n\r\n# Configure the agent\r\necho "Configuring the agent..."\r\n./config.sh\r\n\r\n# Change to the agent\'s service directory\r\ncd $AGENT_DIR\r\n\r\n# Install the agent as a service\r\nsudo ./svc.sh install\r\n\r\n# Start the agent\r\nsudo ./svc.sh start\n'})}),"\n",(0,t.jsx)(r.h3,{id:"learn-more-about-azure-container-registry",children:"Learn more about Azure Container Registry"}),"\n",(0,t.jsxs)(r.admonition,{type:"info",children:[(0,t.jsx)(r.mdxAdmonitionTitle,{}),(0,t.jsxs)(r.p,{children:["Learn more about ",(0,t.jsx)(r.a,{href:"https://learn.microsoft.com/en-us/azure/container-registry/",children:"ACR Container Registry"})]})]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(96540);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);