"use strict";(self.webpackChunksudeeparyan_knowledgebase=self.webpackChunksudeeparyan_knowledgebase||[]).push([[3606],{74955:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var i=r(74848),s=r(28453);const t={},o=void 0,l={id:"RAG360/Evaluation/Evaluation Framework/Trulens/Key Terminologies",title:"Key Terminologies",description:"Feedback Functions in TruLens",source:"@site/docs/RAG360/Evaluation/Evaluation Framework/Trulens/Key Terminologies.md",sourceDirName:"RAG360/Evaluation/Evaluation Framework/Trulens",slug:"/RAG360/Evaluation/Evaluation Framework/Trulens/Key Terminologies",permalink:"/docs/RAG360/Evaluation/Evaluation Framework/Trulens/Key Terminologies",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"ragSidebar",previous:{title:"Overview",permalink:"/docs/RAG360/Evaluation/Evaluation Framework/Trulens/Overview"},next:{title:"Modules",permalink:"/docs/RAG360/Evaluation/Evaluation Framework/Trulens/Modules"}},a={},d=[{value:"Feedback Functions in TruLens",id:"feedback-functions-in-trulens",level:3},{value:"<strong>Overview and Explanation</strong>",id:"overview-and-explanation",level:4},{value:"Example",id:"example",level:3},{value:"Reference",id:"reference",level:3},{value:"Instruments",id:"instruments",level:3},{value:"Example",id:"example-1",level:3},{value:"Reference",id:"reference-1",level:3},{value:"Providers",id:"providers",level:3},{value:"<strong>1. Classification-based Providers</strong>",id:"1-classification-based-providers",level:4},{value:"<strong>2. Generation-based Providers</strong>",id:"2-generation-based-providers",level:4},{value:"<strong>3. Embedding-based Providers</strong>",id:"3-embedding-based-providers",level:4},{value:"Records",id:"records",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"feedback-functions-in-trulens",children:"Feedback Functions in TruLens"}),"\n",(0,i.jsx)(n.h4,{id:"overview-and-explanation",children:(0,i.jsx)(n.strong,{children:"Overview and Explanation"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Feedback functions within TruLens are designed to assess, refine, and\noptimize the performance of different models within the TruLens evaluation\nframework."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Essentially, these functions act as metrics or criteria that help in\ndetermining how well a model's outputs align with expected outcomes, thereby\nguiding the enhancement of algorithms through systematic feedback."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'# Context relevance between question and each context chunk.\nf_context_relevance = (\n    Feedback(\n        provider.context_relevance_with_cot_reasons,\n        name="Context Relevance"\n    )\n    .on(Select.RecordCalls.retrieve.args.query)\n    .on(Select.RecordCalls.retrieve.rets)\n    .aggregate(numpy.mean)\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/evaluation/feedback_functions/",children:"Feedback Functions"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/evaluation/feedback_functions/anatomy/",children:"Anatomy of Feedback Functions"})})]}),"\n",(0,i.jsx)(n.h3,{id:"instruments",children:"Instruments"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"When using LLM applications, access to internal data like the retrieved\ncontext is crucial for evaluation."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["TruLens offers a tool called the ",(0,i.jsx)(n.code,{children:"@instrument"})," decorator, which allows you to\nmark specific methods for data collection. Here's a simple way to use it:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Identify the method you want to analyze."}),"\n",(0,i.jsxs)(n.li,{children:["Put ",(0,i.jsx)(n.code,{children:"@instrument"})," before the method definition."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"This setup allows TruLens to collect and provide you with the necessary\ninternal details when you execute that method."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'from trulens_eval.tru_custom_app import instrument\n\nclass RAG_from_scratch:\n    @instrument\n    def retrieve(self, query: str) -> list:\n        """\n        Retrieve relevant text from vector store.\n        """\n\n    @instrument\n    def generate_completion(self, query: str, context_str: list) -> str:\n        """\n        Generate answer from context.\n        """\n\n    @instrument\n    def query(self, query: str) -> str:\n        """\n        Retrieve relevant text given a query, and then generate an answer from the context.\n        """\n'})}),"\n",(0,i.jsx)(n.h3,{id:"reference-1",children:"Reference"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/tracking/instrumentation/#using-the-instrumentmethod",children:"Instruments-Documentation"})})}),"\n",(0,i.jsx)(n.h3,{id:"providers",children:"Providers"}),"\n",(0,i.jsx)(n.h4,{id:"1-classification-based-providers",children:(0,i.jsx)(n.strong,{children:"1. Classification-based Providers"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"These providers use classifiers specifically designed for certain tasks."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/provider/huggingface/",children:"Huggingface provider"}),":\nOffers a range of classification-based feedback functions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/provider/openai/#trulens_eval.feedback.provider.openai.OpenAI",children:"OpenAI provider"}),":\nKnown for moderation feedback functions."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"2-generation-based-providers",children:(0,i.jsx)(n.strong,{children:"2. Generation-based Providers"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"These providers utilize large language models to generate feedback."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/provider/openai/#trulens_eval.feedback.provider.openai.OpenAI",children:"OpenAI"}),"\nor\n",(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/provider/openai/azureopenai/#trulens_eval.feedback.provider.openai.AzureOpenAI",children:"AzureOpenAI providers"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/provider/bedrock/#trulens_eval.feedback.provider.bedrock.Bedrock",children:"Bedrock provider"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/provider/litellm/#trulens_eval.feedback.provider.litellm.LiteLLM",children:"LiteLLM provider"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/provider/langchain/#trulens_eval.feedback.provider.langchain.Langchain",children:"LangChain provider"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Common feedback functions across these providers are defined in their\n",(0,i.jsx)(n.code,{children:"LLMProvider"})," class."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"3-embedding-based-providers",children:(0,i.jsx)(n.strong,{children:"3. Embedding-based Providers"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Focus on generating and utilizing embeddings (vector representations of\ndata) for feedback functions."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Additionally, there are combination providers that blend capabilities from the\nabove categories to offer more comprehensive feedback functions."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/evaluation/feedback_providers/",children:"Providers-Documentation"})}),"\n",(0,i.jsx)(n.h3,{id:"records",children:"Records"}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["Learn more about ",(0,i.jsx)(n.a,{href:"https://www.trulens.org/trulens_eval/api/record/",children:"Records-Documentation"})]})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var i=r(96540);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);