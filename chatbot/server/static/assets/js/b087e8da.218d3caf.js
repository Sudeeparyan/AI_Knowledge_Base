"use strict";(self.webpackChunksudeeparyan_knowledgebase=self.webpackChunksudeeparyan_knowledgebase||[]).push([[7140],{48973:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var s=t(74848),r=t(28453);const i={},d=void 0,l={id:"RAG360/Data Ingestion/Vector Database/Self Hosted/Qdrant",title:"Qdrant",description:"Qdrant vector store",source:"@site/docs/RAG360/Data Ingestion/Vector Database/Self Hosted/Qdrant.md",sourceDirName:"RAG360/Data Ingestion/Vector Database/Self Hosted",slug:"/RAG360/Data Ingestion/Vector Database/Self Hosted/Qdrant",permalink:"/docs/RAG360/Data Ingestion/Vector Database/Self Hosted/Qdrant",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"ragSidebar",previous:{title:"Self Hosted",permalink:"/docs/category/self-hosted"},next:{title:"Weaviate",permalink:"/docs/RAG360/Data Ingestion/Vector Database/Self Hosted/Weaviate"}},a={},o=[{value:"Qdrant vector store",id:"qdrant-vector-store",level:2},{value:"Test results",id:"test-results",level:2},{value:"Embedding Method Configuration",id:"embedding-method-configuration",level:3},{value:"Embedding Method Performance",id:"embedding-method-performance",level:3},{value:"Advantages",id:"advantages",level:3},{value:"Disadvantages",id:"disadvantages",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"qdrant-vector-store",children:"Qdrant vector store"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Qdrant is an open-source vector similarity search engine and vector database\ndesigned to store, index, and query high-dimensional vectors efficiently."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Currently Qdrant Vector store is supports multiple vector types like"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Dense vectors"}),"\n",(0,s.jsx)(n.li,{children:"Sparse vectors"}),"\n",(0,s.jsx)(n.li,{children:"Dense-uint8"}),"\n",(0,s.jsx)(n.li,{children:"Matryoshka vectors"}),"\n",(0,s.jsx)(n.li,{children:"Multi-vector representation using late interaction models"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Dense vectors can be created by models like Sentence transformers/Embedding\nmodels like OpenAI Ada - 002. Dense vectors are arrays that store each\nelement in a contiguous block of memory. A dense vector typically contains a\nvalue for every dimension, and most of these values are non-zero."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Sparse vectors is created by fastembed python library. Sparse vectors store\nonly non-zero values and their corresponding indices. Most of the elements\nare assumed to be zero and only the non-zero values are explicitly\nrepresented."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Supported models by fastembed to create sparse vectors"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Qdrant/BM25"}),"\n",(0,s.jsx)(n.li,{children:"Qdrant/bm42-all-minilm-l6-v2-attentions"}),"\n",(0,s.jsx)(n.li,{children:"prithivida/Splade_PP_en_v1"}),"\n",(0,s.jsxs)(n.li,{children:["For detailed information :\n",(0,s.jsx)(n.a,{href:"https://qdrant.github.io/fastembed/examples/Supported_Models/#supported-sparse-text-embedding-models",children:"Fastembed supported models"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"By default in llama-index-vector-stores-qdrant, it uses\nprithivida/Splade_PP_en_v1 to create sparse vectors."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"While creating embeddings for Qdrant, by default the dense vectors alone will\nbe generated. Time taken to create these embeddings is also less when\ncompared to Weaviate. It supports only sematic search."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["To create sparse vectors, while initializing the vector store, we need pass\nan argument named enable_hybrid to True. ",(0,s.jsx)(n.img,{alt:"image.png",src:t(64029).A+"",width:"874",height:"422"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Creating this sparse vectors, is taking more time than expected. It's around\n3 to 4 times slower than time required by Weaviate when using Splade models,\nit can reduced when moving to the Qdrant/BM25 model."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Once this sparse vector is created, we can decide whether we need similarity\nbased results (dense vectors) or keyword based results (sparse vectors)\nbased on the alpha value."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When querying with hybrid mode, we can set similarity_top_k and sparse_top_k\nseparately."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"sparse_top_k represents how many nodes will be retrieved from each dense and\nsparse query. For example, if sparse_top_k=5 is set, that means I will\nretrieve 5 nodes using sparse vectors and 5 nodes using dense vectors.\nsimilarity_top_k controls the final number of returned nodes. In the above\nsetting, we end up with 10 nodes. A fusion algorithm is applied to rank and\norder the nodes from different vector spaces (relative score fusion by\ndefault with llama-index). similarity_top_k=2 means the top two nodes after\nfusion are returned."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Once the vectors are generated, we also need to specify the batch_size, the\nnumber vectors that will be uploaded at a time, by default it is 64."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Parallel - Number of parallel processes of upload. By default it is 1. We\ncan specify based on the number of cores available in the system.\n",(0,s.jsx)(n.img,{alt:"image.png",src:t(96614).A+"",width:"582",height:"219"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Recommended configurations for 192.168.0.101 (Test PC) for generating sparse\nvectors"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"batch_size = <=10"})}),"\n",(0,s.jsx)(n.li,{children:"parallel - 2"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Qdrant provides UI support to see the available collections and visulaize\nthe dense vectors in it. To access the dashboard,\n",(0,s.jsx)(n.code,{children:"{qdrant_app_service_url}"}),"/dashboard and inside that enter the secret api\nkey to access the collections."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The backup in the Qdrant vector store is called snapshot. We can configure\nin the Azure service, to take snapshots of collections on the regular\nintervals or download it manually."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The configuration for Qdrant can be still optimized by\n",(0,s.jsx)(n.a,{href:"https://qdrant.tech/documentation/guides/configuration/",children:"config.yaml"})," file."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"test-results",children:"Test results"}),"\n",(0,s.jsxs)(n.p,{children:["The below test results are done with Qdrant ",(0,s.jsx)(n.code,{children:"version <1.9"})," and\nprithivida/Splade_PP_en_v1 for Sparse vectors"]}),"\n",(0,s.jsx)(n.h3,{id:"embedding-method-configuration",children:"Embedding Method Configuration"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Embedding Method"}),(0,s.jsx)(n.th,{children:"Batch Size"}),(0,s.jsx)(n.th,{children:"Vector Store"}),(0,s.jsx)(n.th,{children:"Hybrid Search Enabled"}),(0,s.jsx)(n.th,{children:"Time Consumption for Embedding"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:"Qdrant"}),(0,s.jsx)(n.td,{children:"False"}),(0,s.jsx)(n.td,{children:"Around 30 s"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:"Qdrant"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"Around 7 minutes 30 s"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:"Weaviate"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"Around 45 s"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:"Weaviate"}),(0,s.jsx)(n.td,{children:"False"}),(0,s.jsx)(n.td,{children:"Around 45 s"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"embedding-method-performance",children:"Embedding Method Performance"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Embedding Method"}),(0,s.jsx)(n.th,{children:"Vector Store"}),(0,s.jsx)(n.th,{children:"Hybrid Search Enabled"}),(0,s.jsx)(n.th,{children:"Expected Answer Relevance Score"}),(0,s.jsx)(n.th,{children:"Context Relevance Score"}),(0,s.jsx)(n.th,{children:"Answer Relevance Score"}),(0,s.jsx)(n.th,{children:'No of Questions with "I couldn\'t find answer"'})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"Qdrant"}),(0,s.jsx)(n.td,{children:"False"}),(0,s.jsx)(n.td,{children:"0.59"}),(0,s.jsx)(n.td,{children:"0.82"}),(0,s.jsx)(n.td,{children:"0.85"}),(0,s.jsx)(n.td,{children:"7"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"Qdrant"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"0.61"}),(0,s.jsx)(n.td,{children:"0.88"}),(0,s.jsx)(n.td,{children:"0.88"}),(0,s.jsx)(n.td,{children:"5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"Weaviate"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"0.59"}),(0,s.jsx)(n.td,{children:"0.86"}),(0,s.jsx)(n.td,{children:"0.82"}),(0,s.jsx)(n.td,{children:"8"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Injestion pipeline running locally with PyPDF Reader"}),(0,s.jsx)(n.td,{children:"Weaviate"}),(0,s.jsx)(n.td,{children:"False"}),(0,s.jsx)(n.td,{children:"NA"}),(0,s.jsx)(n.td,{children:"NA"}),(0,s.jsx)(n.td,{children:"NA"}),(0,s.jsx)(n.td,{children:"NA"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"advantages",children:"Advantages"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"SPLADE is supported in Qdrant."}),"\n",(0,s.jsx)(n.li,{children:"Collections are not lost if we use App Service, but can create snapshots of\ncollections."}),"\n",(0,s.jsx)(n.li,{children:"Qdrant supports multiple vector types"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"disadvantages",children:"Disadvantages"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Time taken to create embeddings and retrieve embeddings is quite high when\nusing Splade models for Sparse vectors. It can be rectified by BM25 models"}),"\n",(0,s.jsx)(n.li,{children:"With Qdrant collections are mapped with Azure File Share and App Service\nrestarts for maintenance - App Service takes a longer time to restore the\ncollections from File Share to App Service container.The time to restore\ndepends on the size of the collections.This restore time has a conflict with\nthe Azure App Service start-up time value(Max-startup time for Azure App\nservice - 30 minutes)."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},64029:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/qudrant1-9852640508893fffb9e0abd2995167b2.png"},96614:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/qudrant2-695b32226391919cdc48a8c1c3ac029b.png"},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var s=t(96540);const r={},i=s.createContext(r);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);